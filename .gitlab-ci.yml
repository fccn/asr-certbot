image: registry-gitlab.asr.fccn.pt/asr-sid/sid-docker-ansible:v2.13.7

stages:
  - verify
  - build
  - upload

ansible-lint:
  stage: verify
  tags:
    - ansible
  before_script:
    - export ANSIBLE_HOST_KEY_CHECKING=False # disable host key checking for ansible
    - sed -i "s#ssh://git@gitlab.asr.fccn.pt:2224/#https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.asr.fccn.pt/#g" roles/requirements.yml #change protocol of requiremnts and insert Job Token for authentication
    - ansible-galaxy install --force -r roles/requirements.yml -p ./roles
    - ls roles/
  script:
    - ansible-lint -v *.yml
  except:
    changes:
      - README.md

ansible-syntax:
  stage: verify
  needs: []
  tags:
    - ansible
  before_script:
    - export ANSIBLE_HOST_KEY_CHECKING=False # disable host key checking for ansible
    - sed -i "s#ssh://git@gitlab.asr.fccn.pt:2224/#https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.asr.fccn.pt/#g" roles/requirements.yml #change protocol of requiremnts and insert Job Token for authentication
    - ansible-galaxy install --force -r roles/requirements.yml -p ./roles
    - ls roles/
  script:
    - ansible-playbook --inventory localhost --syntax-check playbook_acme_ssl.yml
  except:
    changes:
      - README.md


build-package:
  stage: build
  needs: []
  tags:
    - ansible
  before_script:
    - export ANSIBLE_HOST_KEY_CHECKING=False # disable host key checking for ansible
    - sed -i "s#ssh://git@gitlab.asr.fccn.pt:2224/#https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.asr.fccn.pt/#g" roles/requirements.yml #change protocol of requiremnts and insert Job Token for authentication
    - ansible-galaxy install --force -r roles/requirements.yml -p ./roles
    # - ls roles/
    - apt install -y zip
  script:
    - zip -r certbot_playbook.zip playbook_acme_ssl.yml README.md roles/
  artifacts:
    paths:
      - certbot_playbook.zip
    when: on_success
  except:
    changes:
      - README.md

upload-package:
  image: 
    name: rclone/rclone:1.64  # Use the latest Rclone image
    entrypoint: [""]
  stage: upload
  dependencies:
    - build-package
  tags:
    - docker
  before_script:
    - echo ${CI_WEBDAV_URL}
    - echo ${CI_WEBDAV_USER}
    - echo ${CI_WEBDAV_PASSWORD}
    - which rclone
  script:
    - ls
    - rclone config create nextcloud webdav url="${CI_WEBDAV_URL}" user="${CI_WEBDAV_USER}" pass="${CI_WEBDAV_PASSWORD}"  # Create the Rclone config for Nextcloud
    - rclone copy --no-check-certificate $CI_PROJECT_DIR/certbot_playbook.zip nextcloud:assets/acme/  # Replace with the correct paths
  except:
    changes:
      - README.md